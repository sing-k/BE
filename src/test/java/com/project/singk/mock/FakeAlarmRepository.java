package com.project.singk.mock;

import com.project.singk.domain.alarm.domain.Alarm;
import com.project.singk.domain.alarm.service.port.AlarmRepository;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Objects;
import java.util.concurrent.atomic.AtomicLong;


public class FakeAlarmRepository implements AlarmRepository {

    private final AtomicLong autoGeneratedId = new AtomicLong(0);
    private final List<Alarm> data = Collections.synchronizedList(new ArrayList<>());

    @Override
    public Alarm save(Alarm alarm){
        if(alarm.getId()==null || alarm.getId()==0){
            Alarm newAlarm = Alarm.builder()
                    .id(autoGeneratedId.incrementAndGet())
                    .content(alarm.getContent())
                    .receiver(alarm.getReceiver())
                    .isRead(alarm.getIsRead())
                    .type(alarm.getType())
                    .build();
            data.add(newAlarm);
            return newAlarm;
        } else {
            data.removeIf(item -> Objects.equals(item.getId(), alarm.getId()));
            data.add(alarm);
            return alarm;
        }
    }

    @Override
    public void deleteById(Long id){
        data.removeIf(item -> Objects.equals(item.getId(),id));
    }
}
